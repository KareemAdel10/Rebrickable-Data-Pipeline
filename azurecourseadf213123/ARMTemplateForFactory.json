{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "azurecourseadf213123"
		},
		"AdventureWorks_LS_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AdventureWorks_LS'"
		},
		"rawADLSg2_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'rawADLSg2'"
		},
		"well_production_data_LS_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'well_production_data_LS'"
		},
		"well_task_DB_LS_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'well_task_DB_LS'"
		},
		"ADLSg2DEV_LS_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://atomicatraining.dfs.core.windows.net/"
		},
		"AdventureWorks_LS_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "@{linkedService().serverName_ls}"
		},
		"AdventureWorks_LS_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "@{linkedService().dbName_ls}"
		},
		"AdventureWorks_LS_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "AtomicaOL"
		},
		"AzureKeyVault1_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://asdasd123123.vault.azure.net/"
		},
		"Rebricakble_Database_LS_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://rebrickable.com/media/downloads/"
		},
		"Rebricakble_Database_LS_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "AtomicaOL"
		},
		"Rebrickable_UserAPI_Database_LS_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://rebrickable.com/"
		},
		"rawADLSg2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://atomicatraining.dfs.core.windows.net/"
		},
		"well_production_data_LS_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://atomicatraining.dfs.core.windows.net/"
		},
		"well_task_DB_LS_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "azurecourse.database.windows.net"
		},
		"well_task_DB_LS_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "training"
		},
		"well_task_DB_LS_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "AtomicaOL"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Genericdatapipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT QUOTENAME(t.name) AS tableName, QUOTENAME(SCHEMA_NAME(t.schema_id)) AS schemaName FROM sys.tables as t",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "GenericDB_Ds",
								"type": "DatasetReference",
								"parameters": {
									"serverName_ds": {
										"value": "@pipeline().parameters.serverName_PL",
										"type": "Expression"
									},
									"dbName_ds": {
										"value": "@pipeline().parameters.dbName_PL",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('SELECT * FROM',item().schemaName, '.', item().tableName)",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "GenericDB_Ds",
											"type": "DatasetReference",
											"parameters": {
												"serverName_ds": {
													"value": "@pipeline().parameters.serverName_PL",
													"type": "Expression"
												},
												"dbName_ds": {
													"value": "@pipeline().parameters.dbName_PL",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLSg2_raw_container",
											"type": "DatasetReference",
											"parameters": {
												"serverName_ADLSg2": {
													"value": "@pipeline().parameters.serverName_PL",
													"type": "Expression"
												},
												"dbName_ADLSg2": {
													"value": "@pipeline().parameters.dbName_PL",
													"type": "Expression"
												},
												"tableName_ADLSg2": {
													"value": "@item().tableName",
													"type": "Expression"
												},
												"schemaName_ADLSg2": {
													"value": "@item().schemaName",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"serverName_PL": {
						"type": "string",
						"defaultValue": "azurecourse.database.windows.net"
					},
					"dbName_PL": {
						"type": "string",
						"defaultValue": "training"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-10-03T22:30:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/GenericDB_Ds')]",
				"[concat(variables('factoryId'), '/datasets/ADLSg2_raw_container')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Rebrickable Lego Database Ingestion Task')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copy - Rebrickable Lego dataset",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET",
									"additionalHeaders": "User-Agent: Chrome/85.0.4183.121 Safari/537.36"
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Rebrickable_Lego_Database_Source",
								"type": "DatasetReference",
								"parameters": {
									"DatasetName_DS": {
										"value": "@pipeline().parameters.DatasetName_pl",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Rebrickable_Lego_Database_sink",
								"type": "DatasetReference",
								"parameters": {
									"DatasetName_SinkDS": {
										"value": "@pipeline().parameters.DatasetName_pl",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "LKP - dataset name",
						"description": "Select the dataset names",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "Reprickable_Lego_Dataset_Names_List_json",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach - Loop over dataset names",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LKP - dataset name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LKP - dataset name').output.value[0].dataset_names",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "copy - Rebrickable Lego dataset_copy1_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "Rebrickable_Lego_Database_Source",
											"type": "DatasetReference",
											"parameters": {
												"DatasetName_DS": {
													"value": "@item()",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Rebrickable_Lego_Database_sink",
											"type": "DatasetReference",
											"parameters": {
												"DatasetName_SinkDS": {
													"value": "@item()",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Error Alert",
						"description": "If error Then send an email to admin",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "ForEach - Loop over dataset names",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {},
							"url": "https://prod-03.israelcentral.logic.azure.com:443/workflows/7a4608addcaa47aea287b5f741e71a65/triggers/When_a_HTTP_request_is_received/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2FWhen_a_HTTP_request_is_received%2Frun&sv=1.0&sig=7Xgqf8y6rBk2AdFurQf_E4etVy1OxWiMAbPOPpkvBSI",
							"body": {
								"value": "{\n    \"message\" : \"This is a custom dynamic message from your pipeline with run ID @{pipeline().RunId}.\",\n    \"dataFactoryName\" : \"@{pipeline().DataFactory}\", \n    \"pipelineName\" : \"@{pipeline().Pipeline}\", \n    \"receiver\" : \"kareema9022@gmail.com\"\n   }",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Error Alert2",
						"description": "If error Then send an email to admin",
						"type": "WebActivity",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "copy - Rebrickable Lego dataset",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {},
							"url": "https://prod-03.israelcentral.logic.azure.com:443/workflows/7a4608addcaa47aea287b5f741e71a65/triggers/When_a_HTTP_request_is_received/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2FWhen_a_HTTP_request_is_received%2Frun&sv=1.0&sig=7Xgqf8y6rBk2AdFurQf_E4etVy1OxWiMAbPOPpkvBSI",
							"body": {
								"value": "{\n    \"message\" : \"This is a custom dynamic message from your pipeline with run ID @{pipeline().RunId}.\",\n    \"dataFactoryName\" : \"@{pipeline().DataFactory}\", \n    \"pipelineName\" : \"@{pipeline().Pipeline}\", \n    \"receiver\" : \"kareema9022@gmail.com\"\n   }",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"DatasetName_pl": {
						"type": "string",
						"defaultValue": "-"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Rebrickable_Lego_Database_Source')]",
				"[concat(variables('factoryId'), '/datasets/Rebrickable_Lego_Database_sink')]",
				"[concat(variables('factoryId'), '/datasets/Reprickable_Lego_Dataset_Names_List_json')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Rebrickable User Database Ingestion Task')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy - Get Api dataset",
						"description": "Retrieve User dataset ",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "web - API Key",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set user_token_pl Variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"Authorization": {
										"value": "@concat('key ', activity('web - API Key').output.value)",
										"type": "Expression"
									}
								},
								"paginationRules": {
									"AbsoluteUrl": "$.next"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Rebrickable_UserAPI_Database_Source_DS",
								"type": "DatasetReference",
								"parameters": {
									"EndPoint": {
										"value": "@pipeline().parameters.EndPoint_pl",
										"type": "Expression"
									},
									"User_token": {
										"value": "@variables('user_token_pl')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Rebrickable_UserAPI_Database_Sink",
								"type": "DatasetReference",
								"parameters": {
									"endpoint_sinkDS": {
										"value": "@pipeline().parameters.EndPoint_pl",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "web - API Key",
						"description": "get secret api key",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://asdasd123123.vault.azure.net/secrets/Rebrickable-API-key/8a0e3b6ac4f94136a51c4582e802f220?api-version=7.0",
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "web - User Token",
						"description": "get user token",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://asdasd123123.vault.azure.net/secrets/Rebrickable-User-token/69e391f93de8402ea2554db85d8850b3?api-version=7.0",
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "Set user_token_pl Variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "web - User Token",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "user_token_pl",
							"value": {
								"value": "@activity('web - User Token').output.value",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Error Alert",
						"description": "If error Then send an email to admin",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Copy - Get Api dataset",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {},
							"url": "https://prod-03.israelcentral.logic.azure.com:443/workflows/7a4608addcaa47aea287b5f741e71a65/triggers/When_a_HTTP_request_is_received/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2FWhen_a_HTTP_request_is_received%2Frun&sv=1.0&sig=7Xgqf8y6rBk2AdFurQf_E4etVy1OxWiMAbPOPpkvBSI",
							"body": {
								"value": "{\n    \"message\" : \"This is a custom dynamic message from your pipeline with run ID @{pipeline().RunId}.\",\n    \"dataFactoryName\" : \"@{pipeline().DataFactory}\", \n    \"pipelineName\" : \"@{pipeline().Pipeline}\", \n    \"receiver\" : \"kareema9022@gmail.com\"\n   }",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"EndPoint_pl": {
						"type": "string"
					}
				},
				"variables": {
					"user_token_pl": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Rebrickable_UserAPI_Database_Source_DS')]",
				"[concat(variables('factoryId'), '/datasets/Rebrickable_UserAPI_Database_Sink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dummy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Wait2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/well_production_data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Well Name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Well Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Well ID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Well ID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Operator",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Operator",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Formation",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Formation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Production Date",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Production Date",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Production Volume",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "Production Volume",
											"type": "Double",
											"physicalType": "float"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Parquet1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "well_production_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-10-16T19:32:04Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Parquet1')]",
				"[concat(variables('factoryId'), '/datasets/well_production_table')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLSg2_raw_container')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "rawADLSg2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"serverName_ADLSg2": {
						"type": "string"
					},
					"dbName_ADLSg2": {
						"type": "string"
					},
					"tableName_ADLSg2": {
						"type": "string"
					},
					"schemaName_ADLSg2": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat( \n    dataset().schemaName_ADLSg2, '.',\n    dataset().tableName_ADLSg2,\n    '.csv')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat(\n    dataset().dbName_ADLSg2,'/',\n    dataset().schemaName_ADLSg2,'/',\n    dataset().tableName_ADLSg2,\n    '/Year=', formatDateTime(utcNow(),'yyyy'),\n    '/Month=',formatDateTime(utcNow(),'MM'),\n    '/Day=',formatDateTime(utcNow(),'dd')\n)",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/rawADLSg2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GenericDB_Ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AdventureWorks_LS",
					"type": "LinkedServiceReference",
					"parameters": {
						"serverName_ls": {
							"value": "@dataset().serverName_ds",
							"type": "Expression"
						},
						"dbName_ls": {
							"value": "@dataset().dbName_ds",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"serverName_ds": {
						"type": "string"
					},
					"dbName_ds": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AdventureWorks_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "well_production_data_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "well_production_data.parquet",
						"fileSystem": "well-productoin-data"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "Well Name",
						"type": "UTF8"
					},
					{
						"name": "Well ID",
						"type": "UTF8"
					},
					{
						"name": "Operator",
						"type": "UTF8"
					},
					{
						"name": "Formation",
						"type": "UTF8"
					},
					{
						"name": "Production Date",
						"type": "UTF8"
					},
					{
						"name": "Production Volume",
						"type": "DOUBLE"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/well_production_data_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Rebrickable_Lego_Database_Source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Rebricakble_Database_LS",
					"type": "LinkedServiceReference",
					"parameters": {
						"Rebrickable_database_LS": {
							"value": "@dataset().DatasetName_DS",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"DatasetName_DS": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@{dataset().DatasetName_DS}.csv.gz",
							"type": "Expression"
						}
					},
					"compression": {
						"type": "gzip"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Rebricakble_Database_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Rebrickable_Lego_Database_sink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLSg2DEV_LS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"DatasetName_SinkDS": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(dataset().DatasetName_SinkDS,'.csv.gz')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat(\n    'Rebrickable/',\n    'Lego/',\n     dataset().DatasetName_SinkDS, '/',\n    '/Year=', formatDateTime(utcNow(),'yyyy'),\n    '/Month=',formatDateTime(utcNow(),'MM'),\n    '/Day=',formatDateTime(utcNow(),'dd')\n)",
							"type": "Expression"
						},
						"fileSystem": "raw-data"
					},
					"compression": {
						"type": "gzip"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSg2DEV_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Rebrickable_UserAPI_Database_Sink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLSg2DEV_LS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"endpoint_sinkDS": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(dataset().endpoint_sinkDS,'.csv.gz')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat(\n    'Rebrickable/',\n    'Users/',\n     dataset().endpoint_sinkDS, '/',\n    '/Year=', formatDateTime(utcNow(),'yyyy'),\n    '/Month=',formatDateTime(utcNow(),'MM'),\n    '/Day=',formatDateTime(utcNow(),'dd')\n)",
							"type": "Expression"
						},
						"fileSystem": "raw-data"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSg2DEV_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Rebrickable_UserAPI_Database_Source_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Rebrickable_UserAPI_Database_LS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"EndPoint": {
						"type": "string"
					},
					"User_token": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "/api/v3/users/@{dataset().User_token}/@{dataset().EndPoint}/\n\n",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Rebrickable_UserAPI_Database_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Reprickable_Lego_Dataset_Names_List_json')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLSg2DEV_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "rebrickable_lego_datasets.json",
						"folderPath": "Rebrickable/Lego",
						"fileSystem": "raw-data"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"dataset_names": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSg2DEV_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/well_production_table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "well_task_DB_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "well_production_data"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/well_task_DB_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLSg2DEV_LS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ADLSg2DEV_LS_properties_typeProperties_url')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AdventureWorks_LS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"serverName_ls": {
						"type": "string"
					},
					"dbName_ls": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AdventureWorks_LS_properties_typeProperties_server')]",
					"database": "[parameters('AdventureWorks_LS_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('AdventureWorks_LS_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AdventureWorks_LS_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault1_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Rebricakble_Database_LS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"Rebrickable_database_LS": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('Rebricakble_Database_LS_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('Rebricakble_Database_LS_properties_typeProperties_userName')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault1",
							"type": "LinkedServiceReference"
						},
						"secretName": "ADLS-Access-key"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Rebrickable_UserAPI_Database_LS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('Rebrickable_UserAPI_Database_LS_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/rawADLSg2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('rawADLSg2_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('rawADLSg2_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/well_production_data_LS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('well_production_data_LS_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('well_production_data_LS_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/well_task_DB_LS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('well_task_DB_LS_properties_typeProperties_server')]",
					"database": "[parameters('well_task_DB_LS_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('well_task_DB_LS_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('well_task_DB_LS_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Rebrickable User dataset')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Ingest Daily user dataset endpoint",
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2024-10-27T20:07:00",
						"timeZone": "Egypt Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								9
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Rebrickable_Lego_Database')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Lego Database Daily Ingestion ",
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2024-10-27T20:05:00",
						"timeZone": "Egypt Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								9
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks",
			"apiVersion": "2018-06-01",
			"properties": {},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default')]",
			"type": "Microsoft.DataFactory/factories/globalparameters",
			"apiVersion": "2018-06-01",
			"properties": {},
			"dependsOn": []
		}
	]
}